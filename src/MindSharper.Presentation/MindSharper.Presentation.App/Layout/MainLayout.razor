@using System.Text.Json
@using System.Text.Json.Serialization
@using MindSharper.Presentation.App.State
@inherits LayoutComponentBase
@inject LayoutState LayoutState
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudThemeProvider @bind-IsDarkMode="LayoutState.IsDarkMode" @ref="@_mudThemeProvider"/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <AuthorizeView>
        <Authorized>
            <MudAppBar>
                <AppBar MudThemeProvider="@_mudThemeProvider"/>
            </MudAppBar>
            <MudDrawer @bind-Open="LayoutState.IsDrawerOpen">
                <NavMenu/>
            </MudDrawer>
        </Authorized>
    </AuthorizeView>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudThemeProvider _mudThemeProvider;

    protected override void OnInitialized()
    {
        AuthenticationStateProvider.AuthenticationStateChanged += async (Task<AuthenticationState> task) =>
        {
            var authenticationState = await task;
            var isAuthenticated = authenticationState.User?.Identity?.IsAuthenticated ?? false;
            if (!isAuthenticated)
            {
                NavigationManager.NavigateTo("/login");
            }
        };

        LayoutState.PropertyChanged += (sender, args) => { InvokeAsync(StateHasChanged); };
    }

}