@page "/decks"
@attribute [StreamRendering]
@using System.Globalization
@using Microsoft.VisualBasic
@using MindSharper.Application.Common
@using MindSharper.Application.Decks.Dtos
@using MindSharper.Presentation.UI.Data
@inject IDeckService deckService

<PageTitle>MindSharper - Decks</PageTitle>

@if (pagedResult == null)
{
    <span>Loading decks...</span>
}
else
{
    <table class="table">
        <thead>
        <tr>
            @foreach (var cellName in _cellNames)
            {
                <th scope="col">@cellName</th>
            }
        </tr>
        </thead>
        <tbody>
        @foreach (var (deck, index) in pagedResult.Results.Select((item, index) => (item, index + 1)))
        {
            <tr>
                <th scope="row">@index</th>
                <td>@deck.Name</td>
                <td>@deck.CreatedAt.ToString("yyyy-MM-dd")</td>
            </tr>
        }
        </tbody>
    </table>
    <footer>
        Displaying items from @pagedResult.ItemFrom to @pagedResult.ItemTo. Total items: @pagedResult.TotalCount. Total pages: @pagedResult.TotalPages
    </footer>
}

@code {
    private readonly string[] _cellNames = ["#", "Name", "Created At"];
    private PagedResult<MinimalDeckDto> pagedResult;

    protected override async Task OnInitializedAsync()
    {
        pagedResult = await deckService.GetDecksAsync();
    }

}