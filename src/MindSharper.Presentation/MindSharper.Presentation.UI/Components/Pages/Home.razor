@page "/"
@using MindSharper.Presentation.UI.Auth
@rendermode InteractiveServer
@inject IAuthService AuthService
@inject IJSRuntime JSRuntime
<PageTitle>Home</PageTitle>

<div class="container col-xl-10 col-xxl-8 px-4 py-5">
    <div class="row align-items-center g-lg-5 py-5">
        <div class="col-lg-7 text-center text-lg-start">
            <h1 class="display-4 fw-bold lh-1 text-body-emphasis mb-3">MindSharper - your gates to knowledge</h1>
            <p class="col-lg-10 fs-4">Sign up now. Start learning. Enjoy a broad selection of existing decks or create your own. </p>
        </div>
        <div class="col-md-10 mx-auto col-lg-5">
            <form class="p-4 p-md-5 border rounded-3 bg-body-tertiary" @onsubmit="OnSubmit">
                <div class="form-floating mb-3">
                    <input @bind="email" type="email" class="form-control" id="floatingInput" placeholder="name@example.com">
                    <label for="floatingInput">Email address</label>
                </div>
                <div class="form-floating mb-3">
                    <input @bind="password" type="password" class="form-control" id="floatingPassword" placeholder="Password">
                    <label for="floatingPassword">Password</label>
                </div>
                <div class="checkbox mb-3">
                    <label>
                        <input type="checkbox" value="remember-me"> Remember me
                    </label>
                </div>
                <button class="w-100 btn btn-lg btn-primary" type="submit">Sign up</button>
                <hr class="my-4">
                <small class="text-body-secondary">By clicking Sign up, you agree to the terms of use.</small>
            </form>
        </div>
    </div>
</div>

@if (signInDto != null)
{
    @signInDto
}

@code {
    private string password;
    private string email;
    private SignInDto signInDto;

    public async Task OnSubmit(EventArgs e)
    {
        JSRuntime.InvokeVoidAsync("preventDefault", e);

        if (!string.IsNullOrWhiteSpace(password) && !string.IsNullOrWhiteSpace(email))
        {
            signInDto = await AuthService.SignInAsync(email, password);
            
        }
        
    }

}